<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数组排序</title>
    <link href="/2022/05/29/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/05/29/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><h4 id="一维数组排序"><a href="#一维数组排序" class="headerlink" title="一维数组排序"></a>一维数组排序</h4><p>对于排序，Java内置了工具类&#x3D;&#x3D;Arrays.sort&#x3D;&#x3D;,其内部原理使用的是快速排序算法，排序之后的结果为升序。</p><ul><li><p>例如</p><p>对于int类型数组</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>可以使用Arrays.sort进行排序</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>无需返回值，因为对arr本身进行操作。操作之后返回的结果为</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>同理，对于String类型数组也是同样的。</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>排序之后的结果按照字典序升序进行排列</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">strs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><p>那么问题来了，如果我想要的效果是大的排在前面——降序呢？该如何操作呢？</p><p>这就涉及到了内部类与重写的操作了。</p><h4 id="自定义排序"><a href="#自定义排序" class="headerlink" title="自定义排序"></a>自定义排序</h4><p>通过观察java的api文档，对Arrays中的sort方法中，有一个参数&#x3D;&#x3D;Comparator&#x3D;&#x3D;</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">`<span class="token operator">*</span><span class="token operator">*</span>sort<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span>  <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span>`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>可以通过内部类，自定义比较规则。</p><ul><li><p>例如，对String类型的一维数组降序</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>strs<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">String</span> o1<span class="token punctuation">,</span> <span class="token class-name">String</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token comment">//字符串的比较使用String中的compareTo方法</span>          <span class="token comment">//compareTo比较之后，结果返回1，表示大于，返回-1，表示小于。</span>          <span class="token keyword">return</span> o2<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o1<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>那么，对于int类型数组是不是一样的操作呢？</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">int</span> o1<span class="token punctuation">,</span> <span class="token keyword">int</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> o2<span class="token operator">-</span>o1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>然而却得到一个&#x3D;&#x3D;编译时异常&#x3D;&#x3D;</p><p><img src="/2022/05/29/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/../../../%E7%AC%94%E8%AE%B0/hexo/source/_posts/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/1653812670549.png" alt="1653812670549"></p><p>这是为什么呢？</p><p>通过比较两代码发现，&#x3D;&#x3D;int&#x3D;&#x3D;属于基本数据类型，而String属于引用类型，故而将int转换为Integer</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">int</span> o1<span class="token punctuation">,</span> <span class="token class-name">Integer</span> o2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> o2<span class="token operator">-</span>o1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="/2022/05/29/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/1653814055658.png" alt="1653814055658"></p><p>完美运行~</p></li></ul><h4 id="二维数组排序"><a href="#二维数组排序" class="headerlink" title="二维数组排序"></a>二维数组排序</h4><p>上面进行了一维数组的int类型和String类型的排序，那么对于二维数组呢，这又该怎么办呢？</p><ul><li><p>例如，leetcode第79场双周赛的第二题</p><p>经过处理后的到数组</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sendAndWords <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">"Alice"</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                           <span class="token punctuation">&#123;</span><span class="token string">"UserTwo"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                           <span class="token punctuation">&#123;</span><span class="token string">"userThree"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//其中sendAndWords第一列表示的是用户，第二列表示发送的单词数。</span><span class="token comment">/**需求为  1、输出单词数最多的用户。  2、若单词数相同，则按名字字典序最大的输出。*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>那么我们对这个二维数组的操作为先对第二列降序，在第二列相同的情况下对第一列降序。</p><p>利用上面一维数组的思想</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sendAndWords <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">"Alice"</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                           <span class="token punctuation">&#123;</span><span class="token string">"UserTwo"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                           <span class="token punctuation">&#123;</span><span class="token string">"userThree"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>sendAndWords<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o1<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 若单词数相同，那么按照用户名字典序降序</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>o2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 按单词数降序。</span>        <span class="token keyword">return</span> o2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>完美运行~</p><p><img src="/2022/05/29/%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F/1653816639187.png" alt="1653816639187"></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署hexo</title>
    <link href="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/"/>
    <url>/2022/05/27/%E9%83%A8%E7%BD%B2hexo/</url>
    
    <content type="html"><![CDATA[<h4 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h4><h5 id="环境配置：git，nodejs"><a href="#环境配置：git，nodejs" class="headerlink" title="环境配置：git，nodejs"></a>环境配置：git，nodejs</h5><h6 id="git（Windows版本）"><a href="#git（Windows版本）" class="headerlink" title="git（Windows版本）"></a>git（Windows版本）</h6><ol><li><p>登录&#x3D;&#x3D;git&#x3D;&#x3D;官网 <a href="https://git-scm.com/">https://git-scm.com/</a> 点击&#x3D;&#x3D;downloads&#x3D;&#x3D;下载</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/gitOfficialWebsite.png" alt="1653655831928"></p><span id="more"></span></li><li><p>点击&#x3D;&#x3D;Windows&#x3D;&#x3D;</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/gitPlayStation.png" alt="1653655951795"></p></li><li><p>按电脑位数选择版本</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/gitDownloadVersion.png" alt="1653655976607"></p></li><li><p>打开cmd（管理员身份运行）命令行</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">#查看安装版本，以此校验git安装是否成功git --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/gitVersion.png" alt="1653661006444"></p></li></ol><h6 id="nodejs（Windows版本）"><a href="#nodejs（Windows版本）" class="headerlink" title="nodejs（Windows版本）"></a>nodejs（Windows版本）</h6><ol><li><p>前往官网下载&#x3D;&#x3D;nodejs&#x3D;&#x3D; <a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/nodejsDownloadPage.png" alt="1653662276898"></p></li><li><p>下载完成后点击安装</p><p>安装nodejs，直接点下一步，直至安装完成。</p></li><li><p>检验安装是否成功</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">#查看nodejs版本，检验安装是否成功node -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/nodejsVersion.png" alt="1653662680884"></p></li></ol><h5 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h5><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h5 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h5><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">hexo init &lt;folder&gt; #将hexo初始化在folder文件夹中cd &lt;folder&gt;npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h5 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h5><p>在cmd中运行</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">hexo s #一定要在hexo的根目录中，及folder文件夹中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/hexoTest.png" alt="1653663635399"></p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/testResult.png" alt="1653663719815"></p><h4 id="主题更换（yilia）"><a href="#主题更换（yilia）" class="headerlink" title="主题更换（yilia）"></a>主题更换（yilia）</h4><ol><li><p>根目录下打开&#x3D;&#x3D;git bash&#x3D;&#x3D;</p></li><li><p>输入</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">git clone https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia.git themes&#x2F;yilia<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>修改根目录下的&#x3D;&#x3D;_config.yml&#x3D;&#x3D;配置</p><p>将&#x3D;&#x3D;theme&#x3D;&#x3D;的值修改为&#x3D;&#x3D;yilia&#x3D;&#x3D;</p></li><li><p>三连（hexo clean,g,d）查看效果</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653722155749.png" alt="1653722155749"></p></li><li><p>头像设置</p><p>打开&#x3D;&#x3D;yilia&#x3D;&#x3D;下的&#x3D;&#x3D;_config.yml&#x3D;&#x3D;，修改&#x3D;&#x3D;avatar&#x3D;&#x3D;(头像)和&#x3D;&#x3D;favicon&#x3D;&#x3D;(选项卡图标)</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653724499349.png" alt="1653724499349"></p><p>此时的路径为相对路径，绝对路径为hexo根目录下的source中。故在source文件夹中放入文件</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653724632555.png" alt="1653724632555"></p><p>三连查看效果</p></li></ol><h4 id="部署遇到的问题"><a href="#部署遇到的问题" class="headerlink" title="部署遇到的问题"></a>部署遇到的问题</h4><h5 id="hexo-d失败"><a href="#hexo-d失败" class="headerlink" title="hexo d失败"></a>hexo d失败</h5><ul><li><p>swapd文件错误</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653721963180.png" alt="1653721963180"></p><p>解决办法：</p><ol><li><p>进入hexo的根目录</p></li><li><p>删除&#x3D;&#x3D;.deploy_git&#x3D;&#x3D;文件</p></li><li><p>在根目录右键打开&#x3D;&#x3D;git bash&#x3D;&#x3D;</p></li><li><p>重新部署</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li></ol></li><li><p>网络不稳定</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653722998916.png" alt="1653722998916"></p><p>多尝试几次即可。</p></li></ul><h5 id="md中图片不显示"><a href="#md中图片不显示" class="headerlink" title="md中图片不显示"></a>md中图片不显示</h5><ol><li><p>进入hexo的根目录</p></li><li><p>修改&#x3D;&#x3D;_config.yml&#x3D;&#x3D;的配置，找到&#x3D;&#x3D;post_asset_folder&#x3D;&#x3D;，其默认为&#x3D;&#x3D;false&#x3D;&#x3D;，将其修改为&#x3D;&#x3D;true&#x3D;&#x3D;。</p><p>（此后，通过&#x3D;&#x3D;hexo new&#x3D;&#x3D;一个新的文件时，会在文件的同级目录下生成一个同名的文件夹，hexo生成页面时，将其一起打包进一个文件夹中。故接下来要修改md的图片位置）</p></li><li><p>打开Typora，点击&#x3D;&#x3D;文件&#x3D;&#x3D;-&gt;&#x3D;&#x3D;偏好设置&#x3D;&#x3D;-&gt;&#x3D;&#x3D;图片插入&#x3D;&#x3D;，修改为下图所示。</p><p><img src="/2022/05/27/%E9%83%A8%E7%BD%B2hexo/1653720865785.png" alt="1653720865785"></p></li><li><p>此时再次三连(hexo clean, hexo g, hexo d)即可。</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/26/hello-world/"/>
    <url>/2022/05/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
